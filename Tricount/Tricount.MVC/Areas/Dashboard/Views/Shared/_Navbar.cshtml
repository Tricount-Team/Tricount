@using Microsoft.AspNetCore.Identity;
@using Microsoft.EntityFrameworkCore;
@using Tricount.BL.Abstract;
@using Tricount.Entities.Concrete;

@inject UserManager<User> userManager;
@inject IInviteManager inviteManager;
@inject IExpenseManager expenseManager;
@{
    var user = await userManager.GetUserAsync(User);

    var inviteRaw = inviteManager.GetAllInclude(i => i.UserId == user.Id, i => i.Groups).Result;
    var invites = inviteRaw.Where(i => i.IsFinished == false).ToList();

    var expenseRaw = expenseManager.GetAllInclude(e => e.PayerId == user.Id, e => e.ExpenseDetails).Result;
    var expenses = expenseRaw.Where(e => e.IsFinished == false).ToList();

    var now = DateTime.Now;

    var expenseCount = 0;
    foreach (var expense in expenses)
    {
        foreach (var expenseDetail in expense.ExpenseDetails)
        {
            if (expense.ExpenseDetails.Count > 0 && expenseDetail.IsPaid == true && expenseDetail.IsApproved == false)
            {
                expenseCount++;
            }
        }
    }
    var notificationCount = expenseCount + invites.Count;
}

<!-- Navbar -->
<nav class="main-header navbar navbar-expand navbar-white navbar-light">
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/dashboard/menu" class="nav-link">Home</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">Contact</a>
        </li>
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown2" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Help
            </a>
            <div class="dropdown-menu" aria-labelledby="navbarDropdown2">
                <a class="dropdown-item" href="#">FAQ</a>
                <a class="dropdown-item" href="#">Support</a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item" href="#">Contact</a>
            </div>
        </li>
    </ul>

    <!-- Right navbar links -->
    <ul class="navbar-nav ml-auto">
        <!-- Notifications Dropdown Menu -->
        <li class="nav-item mx-3">
            <a class="nav-link" data-bs-toggle="modal" data-bs-target="#createGroupModal" style="cursor:pointer">
                <i class="fas fa-plus"></i>
                <span class="badge badge-success">Add Group</span>
            </a>
        </li>

        <li class="nav-item dropdown mx-3">
            <a class="nav-link" data-toggle="dropdown" href="#">
                <i class="far fa-bell"></i>
                <span class="badge badge-warning">@notificationCount</span>
            </a>
            <div class="dropdown-menu  dropdown-menu-lg dropdown-menu-right p-3">
                <span class="dropdown-header">@notificationCount Notifications</span>
                <div class="dropdown-divider"></div>
                <a href="#" class="dropdown-item p-3" data-bs-toggle="modal" data-bs-target="#NotificationModal">
                    <i class="fas fa-envelope mr-2"></i> @invites.Count New Group Invite
                    @if (invites.Count > 0)
                    {
                        var invitesDate = invites.OrderByDescending(i => i.UpdateDate.Ticks).FirstOrDefault().UpdateDate;
                        var invitesyear = now.Year - invitesDate.Year;
                        var invitesmonth = now.Month - invitesDate.Month;
                        var invitesday = now.Day - invitesDate.Day;
                        var inviteshour = now.Hour - invitesDate.Hour;
                        var invitesminute = now.Minute - invitesDate.Minute;
                        var invitessecond = now.Second - invitesDate.Second;

                        if (invitesyear > 0)
                        {
                            <span class="float-right text-muted text-sm"> @invitesyear years ago</span>
                        }
                        else if (invitesmonth > 0)
                        {
                            <span class="float-right text-muted text-sm"> @invitesmonth months ago</span>
                        }
                        else if (invitesday > 0)
                        {
                            <span class="float-right text-muted text-sm"> @invitesday days ago</span>
                        }
                        else if (inviteshour > 0)
                        {
                            <span class="float-right text-muted text-sm"> @inviteshour hours ago</span>
                        }
                        else if (invitesminute > 0)
                        {
                            <span class="float-right text-muted text-sm"> @invitesminute minutes ago</span>
                        }

                    }
                </a>
                <div class="dropdown-divider"></div>
                <a href="#" class="dropdown-item p-3" data-bs-toggle="modal" data-bs-target="#PaidConfirmationNotificationModal">
                    <i class="fas fa-check mr-2"></i> @expenseCount New Payment Confirmation
                    @if (expenseCount > 0)
                    {
                        var expenseDate = expenses.OrderByDescending(e => e.UpdateDate.Ticks).FirstOrDefault().UpdateDate;
                        var paymentyear = now.Year - expenseDate.Year;
                        var paymentmonth = now.Month - expenseDate.Month;
                        var paymentday = now.Day - expenseDate.Day;
                        var paymenthour = now.Hour - expenseDate.Hour;
                        var paymentminute = now.Minute - expenseDate.Minute;
                        var paymentsecond = now.Second - expenseDate.Second;

                        if (paymentyear > 0)
                        {
                            <span class="float-right text-muted text-sm"> @paymentyear years ago</span>
                        }
                        else if (paymentmonth > 0)
                        {
                            <span class="float-right text-muted text-sm"> @paymentmonth months ago</span>
                        }
                        else if (paymentday > 0)
                        {
                            <span class="float-right text-muted text-sm"> @paymentday days ago</span>
                        }
                        else if (paymenthour > 0)
                        {
                            <span class="float-right text-muted text-sm"> @paymenthour hours ago</span>
                        }
                        else if (paymentminute > 0)
                        {
                            <span class="float-right text-muted text-sm"> @paymentminute minutes ago</span>
                        }
                        else if (paymentsecond > 0)
                        {
                            <span class="float-right text-muted text-sm"> @paymentsecond seconds ago</span>
                        }
                    }
                </a>
                <div class="dropdown-divider"></div>
            </div>
        </li>
    </ul>
</nav>
<!-- /.navbar -->

<partial name="_NotificationModal" />
<partial name="_PaidConfirmationNotificationModal" />
<partial name="_CreateModal" />